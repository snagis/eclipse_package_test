/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

configurations {
  ecj
}

dependencies {
    // Use JUnit test framework.
    testImplementation libs.junit

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava

    ecj "org.eclipse.jdt:ecj:3.38.0"
}

def eclipseJavaCompiler = configurations.ecj

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


tasks.withType(JavaCompile) {
  options.headerOutputDirectory.convention(null)
  options.fork = true
  options.forkOptions.with {
    executable = "${System.properties['java.home']}/bin/java"
    jvmArgs = ['-classpath', "${eclipseJavaCompiler.asPath}".toString(), 'org.eclipse.jdt.internal.compiler.batch.Main']
  } 
}


